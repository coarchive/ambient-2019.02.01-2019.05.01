#!/usr/bin/env node

const reset = "[0m";

const green = "[32m";
const orange = "[33m";
const blue = "[34m";
const purple = "[35m";
const grey = "[37m";
const pink = "[91m";
const yellow = "[93m";

let delimiter = process.platform === "win32" ? ';' : ':';

function write(str) {
  process.stdout.write(str);
}

function log(str) {
  console.log(str);
}

function logPrompt(val) {
  log(val.replace(/\\[\[\]]/g, ''));
}

function out(...strs) {
  write(strs.join(''));
}

function outKey(str) {
  out(pink, str, orange, ': ', reset);
}

function outln(...strs) {
  out(...strs, '\n');
}

function outString(...strs) {
  write(strs.join('').replace(/(\033\[([\d;]+)m)/g, "$1\\033[$2m") + reset);
}

function outlnString(...strs) {
  outString(...strs, '\n');
}

function outValue(val) {
  if (val.includes(delimiter)) {
    outln(yellow, '[', reset);
    val.split(delimiter).forEach((str, idx, self) => {
      outString("  ", str);
      if (idx + 1 !== self.length) {
        out(grey, ',', reset);
      }
      log('');
    });
    outln(yellow, ']', reset);
  } else {
    outlnString(val);
  }
}

function isBashFunction(key) {
  return key.startsWith("BASH_FUNC_") && key.endsWith("%%");
}

function writeBashFunction(key) {
  out(purple, "function ", grey, key.slice(10, -2), "() ", blue, '{', grey, " ... ", blue, '}', '\n');
}

Object.keys(process.env).sort().forEach((key) => {
  const val = process.env[key];
  if (isBashFunction(key)) {
    writeBashFunction(key);
  } else if (key == "PS1") {
    logPrompt(val);
  } else {
    outKey(key);
    outValue(val);
  }
});
